// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: STEventTrace.capnp

#include "STEventTrace.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<54> b_87ac4540ededb107 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      7, 177, 237, 237,  64,  69, 172, 135,
     19,   0,   0,   0,   1,   0,   3,   0,
    168, 217,  27, 140, 122,  25, 116, 146,
      2,   0,   7,   0,   0,   0,   3,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  46,  99,  97, 112,
    110, 112,  58,  69, 118, 101, 110, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   1,   0,   1,   0,
     37, 186, 118, 176, 110, 245, 179, 212,
     17,   0,   0,   0,  82,   0,   0,   0,
    146,   2,  31, 155, 177, 159, 239, 193,
     17,   0,   0,   0,  74,   0,   0,   0,
    124, 113,   8, 192, 150, 123,  27, 176,
     17,   0,   0,   0,  74,   0,   0,   0,
     65, 100, 100, 114,  82,  97, 110, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
     67, 111, 109, 109,  69, 100, 103, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 121, 110,  99,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    209, 244, 111, 181, 219,  46,  88, 140,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    162, 238,   2,  14,  54, 111, 121, 167,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    117, 238, 254, 165, 145, 111, 246, 148,
     21,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 112,   0,   0,   0,   0,
     99, 111, 109, 109,   0,   0,   0,   0,
    115, 121, 110,  99,   0,   0,   0,   0, }
};
::capnp::word const* const bp_87ac4540ededb107 = b_87ac4540ededb107.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_87ac4540ededb107[] = {
  &s_8c582edbb56ff4d1,
  &s_94f66f91a5feee75,
  &s_a7796f360e02eea2,
};
static const uint16_t m_87ac4540ededb107[] = {1, 0, 2};
static const uint16_t i_87ac4540ededb107[] = {0, 1, 2};
const ::capnp::_::RawSchema s_87ac4540ededb107 = {
  0x87ac4540ededb107, b_87ac4540ededb107.words, 54, d_87ac4540ededb107, m_87ac4540ededb107,
  3, 3, i_87ac4540ededb107, nullptr, nullptr, { &s_87ac4540ededb107, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_d4b3f56eb076ba25 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     37, 186, 118, 176, 110, 245, 179, 212,
     25,   0,   0,   0,   1,   0,   2,   0,
      7, 177, 237, 237,  64,  69, 172, 135,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  46,  99,  97, 112,
    110, 112,  58,  69, 118, 101, 110, 116,
     46,  65, 100, 100, 114,  82,  97, 110,
    103, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 114, 116,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 100,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d4b3f56eb076ba25 = b_d4b3f56eb076ba25.words;
#if !CAPNP_LITE
static const uint16_t m_d4b3f56eb076ba25[] = {1, 0};
static const uint16_t i_d4b3f56eb076ba25[] = {0, 1};
const ::capnp::_::RawSchema s_d4b3f56eb076ba25 = {
  0xd4b3f56eb076ba25, b_d4b3f56eb076ba25.words, 49, nullptr, m_d4b3f56eb076ba25,
  0, 2, i_d4b3f56eb076ba25, nullptr, nullptr, { &s_d4b3f56eb076ba25, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<70> b_c1ef9fb19b1f0292 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    146,   2,  31, 155, 177, 159, 239, 193,
     25,   0,   0,   0,   1,   0,   1,   0,
      7, 177, 237, 237,  64,  69, 172, 135,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  46,  99,  97, 112,
    110, 112,  58,  69, 118, 101, 110, 116,
     46,  67, 111, 109, 109,  69, 100, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
    112, 114, 111, 100, 117,  99, 101, 114,
     84, 104, 114, 101,  97, 100,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 100, 117,  99, 101, 114,
     69, 118, 101, 110, 116,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     37, 186, 118, 176, 110, 245, 179, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c1ef9fb19b1f0292 = b_c1ef9fb19b1f0292.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c1ef9fb19b1f0292[] = {
  &s_d4b3f56eb076ba25,
};
static const uint16_t m_c1ef9fb19b1f0292[] = {2, 1, 0};
static const uint16_t i_c1ef9fb19b1f0292[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c1ef9fb19b1f0292 = {
  0xc1ef9fb19b1f0292, b_c1ef9fb19b1f0292.words, 70, d_c1ef9fb19b1f0292, m_c1ef9fb19b1f0292,
  1, 3, i_c1ef9fb19b1f0292, nullptr, nullptr, { &s_c1ef9fb19b1f0292, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_b01b7b96c008717c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    124, 113,   8, 192, 150, 123,  27, 176,
     25,   0,   0,   0,   2,   0,   0,   0,
      7, 177, 237, 237,  64,  69, 172, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  15,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  46,  99,  97, 112,
    110, 112,  58,  69, 118, 101, 110, 116,
     46,  83, 121, 110,  99,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     44,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 112,  97, 119, 110,   0,   0,   0,
    106, 111, 105, 110,   0,   0,   0,   0,
     98,  97, 114, 114, 105, 101, 114,   0,
    115, 121, 110,  99,   0,   0,   0,   0,
    108, 111,  99, 107,   0,   0,   0,   0,
    117, 110, 108, 111,  99, 107,   0,   0,
     99, 111, 110, 100,  87,  97, 105, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 100,  83, 105, 103, 110,
     97, 108,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 100,  66, 114, 111,  97,
    100,  99,  97, 115, 116,   0,   0,   0,
    115, 112, 105, 110,  76, 111,  99, 107,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 112, 105, 110,  85, 110, 108, 111,
     99, 107,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b01b7b96c008717c = b_b01b7b96c008717c.words;
#if !CAPNP_LITE
static const uint16_t m_b01b7b96c008717c[] = {2, 8, 7, 6, 1, 4, 0, 9, 10, 3, 5};
const ::capnp::_::RawSchema s_b01b7b96c008717c = {
  0xb01b7b96c008717c, b_b01b7b96c008717c.words, 68, nullptr, m_b01b7b96c008717c,
  0, 11, nullptr, nullptr, nullptr, { &s_b01b7b96c008717c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(SyncType_b01b7b96c008717c, b01b7b96c008717c);
static const ::capnp::_::AlignedData<117> b_8c582edbb56ff4d1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    209, 244, 111, 181, 219,  46,  88, 140,
     25,   0,   0,   0,   1,   0,   3,   0,
      7, 177, 237, 237,  64,  69, 172, 135,
      2,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  46,  99,  97, 112,
    110, 112,  58,  69, 118, 101, 110, 116,
     46,  99, 111, 109, 112,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
    105, 111, 112, 115,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111, 112, 115,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 114, 105, 116, 101, 115,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 100, 115,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 114, 105, 116, 101,  65, 100, 100,
    114, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     37, 186, 118, 176, 110, 245, 179, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 100,  65, 100, 100, 114,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     37, 186, 118, 176, 110, 245, 179, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8c582edbb56ff4d1 = b_8c582edbb56ff4d1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8c582edbb56ff4d1[] = {
  &s_87ac4540ededb107,
  &s_d4b3f56eb076ba25,
};
static const uint16_t m_8c582edbb56ff4d1[] = {1, 0, 5, 3, 4, 2};
static const uint16_t i_8c582edbb56ff4d1[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_8c582edbb56ff4d1 = {
  0x8c582edbb56ff4d1, b_8c582edbb56ff4d1.words, 117, d_8c582edbb56ff4d1, m_8c582edbb56ff4d1,
  2, 6, i_8c582edbb56ff4d1, nullptr, nullptr, { &s_8c582edbb56ff4d1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_a7796f360e02eea2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    162, 238,   2,  14,  54, 111, 121, 167,
     25,   0,   0,   0,   1,   0,   3,   0,
      7, 177, 237, 237,  64,  69, 172, 135,
      2,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  46,  99,  97, 112,
    110, 112,  58,  69, 118, 101, 110, 116,
     46,  99, 111, 109, 109,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101, 100, 103, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    146,   2,  31, 155, 177, 159, 239, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a7796f360e02eea2 = b_a7796f360e02eea2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a7796f360e02eea2[] = {
  &s_87ac4540ededb107,
  &s_c1ef9fb19b1f0292,
};
static const uint16_t m_a7796f360e02eea2[] = {0};
static const uint16_t i_a7796f360e02eea2[] = {0};
const ::capnp::_::RawSchema s_a7796f360e02eea2 = {
  0xa7796f360e02eea2, b_a7796f360e02eea2.words, 36, d_a7796f360e02eea2, m_a7796f360e02eea2,
  2, 1, i_a7796f360e02eea2, nullptr, nullptr, { &s_a7796f360e02eea2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_94f66f91a5feee75 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    117, 238, 254, 165, 145, 111, 246, 148,
     25,   0,   0,   0,   1,   0,   3,   0,
      7, 177, 237, 237,  64,  69, 172, 135,
      2,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  46,  99,  97, 112,
    110, 112,  58,  69, 118, 101, 110, 116,
     46, 115, 121, 110,  99,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    124, 113,   8, 192, 150, 123,  27, 176,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_94f66f91a5feee75 = b_94f66f91a5feee75.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_94f66f91a5feee75[] = {
  &s_87ac4540ededb107,
  &s_b01b7b96c008717c,
};
static const uint16_t m_94f66f91a5feee75[] = {1, 0};
static const uint16_t i_94f66f91a5feee75[] = {0, 1};
const ::capnp::_::RawSchema s_94f66f91a5feee75 = {
  0x94f66f91a5feee75, b_94f66f91a5feee75.words, 47, d_94f66f91a5feee75, m_94f66f91a5feee75,
  2, 2, i_94f66f91a5feee75, nullptr, nullptr, { &s_94f66f91a5feee75, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_bac698225ac8c0d0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    208, 192, 200,  90,  34, 152, 198, 186,
     19,   0,   0,   0,   1,   0,   0,   0,
    168, 217,  27, 140, 122,  25, 116, 146,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  46,  99,  97, 112,
    110, 112,  58,  69, 118, 101, 110, 116,
     83, 116, 114, 101,  97, 109,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101, 118, 101, 110, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      7, 177, 237, 237,  64,  69, 172, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bac698225ac8c0d0 = b_bac698225ac8c0d0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bac698225ac8c0d0[] = {
  &s_87ac4540ededb107,
};
static const uint16_t m_bac698225ac8c0d0[] = {0};
static const uint16_t i_bac698225ac8c0d0[] = {0};
const ::capnp::_::RawSchema s_bac698225ac8c0d0 = {
  0xbac698225ac8c0d0, b_bac698225ac8c0d0.words, 37, d_bac698225ac8c0d0, m_bac698225ac8c0d0,
  1, 1, i_bac698225ac8c0d0, nullptr, nullptr, { &s_bac698225ac8c0d0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Event
#ifndef _MSC_VER
constexpr uint16_t Event::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Event::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Event::AddrRange
#ifndef _MSC_VER
constexpr uint16_t Event::AddrRange::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::AddrRange::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::AddrRange::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::AddrRange::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Event::AddrRange::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Event::CommEdge
#ifndef _MSC_VER
constexpr uint16_t Event::CommEdge::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::CommEdge::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::CommEdge::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::CommEdge::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Event::CommEdge::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Event::Comp
#ifndef _MSC_VER
constexpr uint16_t Event::Comp::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::Comp::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::Comp::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::Comp::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Event::Comp::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Event::Comm
#ifndef _MSC_VER
constexpr uint16_t Event::Comm::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::Comm::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::Comm::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::Comm::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Event::Comm::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Event::Sync
#ifndef _MSC_VER
constexpr uint16_t Event::Sync::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::Sync::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::Sync::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::Sync::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Event::Sync::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// EventStream
#ifndef _MSC_VER
constexpr uint16_t EventStream::_capnpPrivate::dataWordSize;
constexpr uint16_t EventStream::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind EventStream::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* EventStream::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* EventStream::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



