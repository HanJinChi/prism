// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: STEventTraceCompressed.capnp

#include "STEventTraceCompressed.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<43> b_e57f0f2c60992cf5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    245,  44, 153,  96,  44,  15, 127, 229,
     29,   0,   0,   0,   1,   0,   0,   0,
    168, 217,  27, 140, 122,  25, 116, 146,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  67, 111, 109, 112,
    114, 101, 115, 115, 101, 100,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  83, 116, 114, 101,  97, 109,
     67, 111, 109, 112, 114, 101, 115, 115,
    101, 100,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     58, 117,  99, 226, 157,  99,  73, 165,
      1,   0,   0,   0,  50,   0,   0,   0,
     69, 118, 101, 110, 116,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101, 118, 101, 110, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     58, 117,  99, 226, 157,  99,  73, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e57f0f2c60992cf5 = b_e57f0f2c60992cf5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e57f0f2c60992cf5[] = {
  &s_a549639de263753a,
};
static const uint16_t m_e57f0f2c60992cf5[] = {0};
static const uint16_t i_e57f0f2c60992cf5[] = {0};
const ::capnp::_::RawSchema s_e57f0f2c60992cf5 = {
  0xe57f0f2c60992cf5, b_e57f0f2c60992cf5.words, 43, d_e57f0f2c60992cf5, m_e57f0f2c60992cf5,
  1, 1, i_e57f0f2c60992cf5, nullptr, nullptr, { &s_e57f0f2c60992cf5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_a549639de263753a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     58, 117,  99, 226, 157,  99,  73, 165,
     51,   0,   0,   0,   1,   0,   3,   0,
    245,  44, 153,  96,  44,  15, 127, 229,
      2,   0,   7,   0,   0,   0,   4,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   1,   0,   0,
     49,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  67, 111, 109, 112,
    114, 101, 115, 115, 101, 100,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  83, 116, 114, 101,  97, 109,
     67, 111, 109, 112, 114, 101, 115, 115,
    101, 100,  46,  69, 118, 101, 110, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   1,   0,   1,   0,
    100, 193, 152,  16, 140, 187, 129, 222,
     17,   0,   0,   0,  82,   0,   0,   0,
      4, 121, 223, 112, 148,  69, 225, 135,
     17,   0,   0,   0,  74,   0,   0,   0,
    130,  60, 215, 157,  35, 161, 158, 243,
     17,   0,   0,   0,  74,   0,   0,   0,
     65, 100, 100, 114,  82,  97, 110, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
     67, 111, 109, 109,  69, 100, 103, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     83, 121, 110,  99,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     35, 220, 208, 232, 250,  49, 191, 210,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     27, 115, 226,  99, 194, 149, 116, 149,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     11,  74,  11, 206, 159,  10, 155, 141,
     49,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    232, 217,  49, 200, 135,  63,  69, 134,
     25,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 112,   0,   0,   0,   0,
     99, 111, 109, 109,   0,   0,   0,   0,
    115, 121, 110,  99,   0,   0,   0,   0,
    109,  97, 114, 107, 101, 114,   0,   0, }
};
::capnp::word const* const bp_a549639de263753a = b_a549639de263753a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a549639de263753a[] = {
  &s_86453f87c831d9e8,
  &s_8d9b0a9fce0b4a0b,
  &s_957495c263e2731b,
  &s_d2bf31fae8d0dc23,
};
static const uint16_t m_a549639de263753a[] = {1, 0, 3, 2};
static const uint16_t i_a549639de263753a[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_a549639de263753a = {
  0xa549639de263753a, b_a549639de263753a.words, 66, d_a549639de263753a, m_a549639de263753a,
  4, 4, i_a549639de263753a, nullptr, nullptr, { &s_a549639de263753a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<53> b_de81bb8c1098c164 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    100, 193, 152,  16, 140, 187, 129, 222,
     57,   0,   0,   0,   1,   0,   2,   0,
     58, 117,  99, 226, 157,  99,  73, 165,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   2,   0,   0,
     53,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  67, 111, 109, 112,
    114, 101, 115, 115, 101, 100,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  83, 116, 114, 101,  97, 109,
     67, 111, 109, 112, 114, 101, 115, 115,
    101, 100,  46,  69, 118, 101, 110, 116,
     46,  65, 100, 100, 114,  82,  97, 110,
    103, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 114, 116,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 100,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_de81bb8c1098c164 = b_de81bb8c1098c164.words;
#if !CAPNP_LITE
static const uint16_t m_de81bb8c1098c164[] = {1, 0};
static const uint16_t i_de81bb8c1098c164[] = {0, 1};
const ::capnp::_::RawSchema s_de81bb8c1098c164 = {
  0xde81bb8c1098c164, b_de81bb8c1098c164.words, 53, nullptr, m_de81bb8c1098c164,
  0, 2, i_de81bb8c1098c164, nullptr, nullptr, { &s_de81bb8c1098c164, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<74> b_87e1459470df7904 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      4, 121, 223, 112, 148,  69, 225, 135,
     57,   0,   0,   0,   1,   0,   1,   0,
     58, 117,  99, 226, 157,  99,  73, 165,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   2,   0,   0,
     53,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  67, 111, 109, 112,
    114, 101, 115, 115, 101, 100,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  83, 116, 114, 101,  97, 109,
     67, 111, 109, 112, 114, 101, 115, 115,
    101, 100,  46,  69, 118, 101, 110, 116,
     46,  67, 111, 109, 109,  69, 100, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
    112, 114, 111, 100, 117,  99, 101, 114,
     84, 104, 114, 101,  97, 100,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 100, 117,  99, 101, 114,
     69, 118, 101, 110, 116,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 193, 152,  16, 140, 187, 129, 222,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_87e1459470df7904 = b_87e1459470df7904.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_87e1459470df7904[] = {
  &s_de81bb8c1098c164,
};
static const uint16_t m_87e1459470df7904[] = {2, 1, 0};
static const uint16_t i_87e1459470df7904[] = {0, 1, 2};
const ::capnp::_::RawSchema s_87e1459470df7904 = {
  0x87e1459470df7904, b_87e1459470df7904.words, 74, d_87e1459470df7904, m_87e1459470df7904,
  1, 3, i_87e1459470df7904, nullptr, nullptr, { &s_87e1459470df7904, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<72> b_f39ea1239dd73c82 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    130,  60, 215, 157,  35, 161, 158, 243,
     57,   0,   0,   0,   2,   0,   0,   0,
     58, 117,  99, 226, 157,  99,  73, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   2,   0,   0,
     53,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  15,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  67, 111, 109, 112,
    114, 101, 115, 115, 101, 100,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  83, 116, 114, 101,  97, 109,
     67, 111, 109, 112, 114, 101, 115, 115,
    101, 100,  46,  69, 118, 101, 110, 116,
     46,  83, 121, 110,  99,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     44,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 112,  97, 119, 110,   0,   0,   0,
    106, 111, 105, 110,   0,   0,   0,   0,
     98,  97, 114, 114, 105, 101, 114,   0,
    115, 121, 110,  99,   0,   0,   0,   0,
    108, 111,  99, 107,   0,   0,   0,   0,
    117, 110, 108, 111,  99, 107,   0,   0,
     99, 111, 110, 100,  87,  97, 105, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 100,  83, 105, 103, 110,
     97, 108,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 100,  66, 114, 111,  97,
    100,  99,  97, 115, 116,   0,   0,   0,
    115, 112, 105, 110,  76, 111,  99, 107,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 112, 105, 110,  85, 110, 108, 111,
     99, 107,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f39ea1239dd73c82 = b_f39ea1239dd73c82.words;
#if !CAPNP_LITE
static const uint16_t m_f39ea1239dd73c82[] = {2, 8, 7, 6, 1, 4, 0, 9, 10, 3, 5};
const ::capnp::_::RawSchema s_f39ea1239dd73c82 = {
  0xf39ea1239dd73c82, b_f39ea1239dd73c82.words, 72, nullptr, m_f39ea1239dd73c82,
  0, 11, nullptr, nullptr, nullptr, { &s_f39ea1239dd73c82, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(SyncType_f39ea1239dd73c82, f39ea1239dd73c82);
static const ::capnp::_::AlignedData<121> b_d2bf31fae8d0dc23 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     35, 220, 208, 232, 250,  49, 191, 210,
     57,   0,   0,   0,   1,   0,   3,   0,
     58, 117,  99, 226, 157,  99,  73, 165,
      2,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  67, 111, 109, 112,
    114, 101, 115, 115, 101, 100,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  83, 116, 114, 101,  97, 109,
     67, 111, 109, 112, 114, 101, 115, 115,
    101, 100,  46,  69, 118, 101, 110, 116,
     46,  99, 111, 109, 112,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
    105, 111, 112, 115,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111, 112, 115,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 114, 105, 116, 101, 115,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 100, 115,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 114, 105, 116, 101,  65, 100, 100,
    114, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 193, 152,  16, 140, 187, 129, 222,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 100,  65, 100, 100, 114,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    100, 193, 152,  16, 140, 187, 129, 222,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d2bf31fae8d0dc23 = b_d2bf31fae8d0dc23.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d2bf31fae8d0dc23[] = {
  &s_a549639de263753a,
  &s_de81bb8c1098c164,
};
static const uint16_t m_d2bf31fae8d0dc23[] = {1, 0, 5, 3, 4, 2};
static const uint16_t i_d2bf31fae8d0dc23[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_d2bf31fae8d0dc23 = {
  0xd2bf31fae8d0dc23, b_d2bf31fae8d0dc23.words, 121, d_d2bf31fae8d0dc23, m_d2bf31fae8d0dc23,
  2, 6, i_d2bf31fae8d0dc23, nullptr, nullptr, { &s_d2bf31fae8d0dc23, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_957495c263e2731b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     27, 115, 226,  99, 194, 149, 116, 149,
     57,   0,   0,   0,   1,   0,   3,   0,
     58, 117,  99, 226, 157,  99,  73, 165,
      2,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  67, 111, 109, 112,
    114, 101, 115, 115, 101, 100,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  83, 116, 114, 101,  97, 109,
     67, 111, 109, 112, 114, 101, 115, 115,
    101, 100,  46,  69, 118, 101, 110, 116,
     46,  99, 111, 109, 109,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101, 100, 103, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      4, 121, 223, 112, 148,  69, 225, 135,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_957495c263e2731b = b_957495c263e2731b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_957495c263e2731b[] = {
  &s_87e1459470df7904,
  &s_a549639de263753a,
};
static const uint16_t m_957495c263e2731b[] = {0};
static const uint16_t i_957495c263e2731b[] = {0};
const ::capnp::_::RawSchema s_957495c263e2731b = {
  0x957495c263e2731b, b_957495c263e2731b.words, 40, d_957495c263e2731b, m_957495c263e2731b,
  2, 1, i_957495c263e2731b, nullptr, nullptr, { &s_957495c263e2731b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_8d9b0a9fce0b4a0b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     11,  74,  11, 206, 159,  10, 155, 141,
     57,   0,   0,   0,   1,   0,   3,   0,
     58, 117,  99, 226, 157,  99,  73, 165,
      2,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  67, 111, 109, 112,
    114, 101, 115, 115, 101, 100,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  83, 116, 114, 101,  97, 109,
     67, 111, 109, 112, 114, 101, 115, 115,
    101, 100,  46,  69, 118, 101, 110, 116,
     46, 115, 121, 110,  99,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    130,  60, 215, 157,  35, 161, 158, 243,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8d9b0a9fce0b4a0b = b_8d9b0a9fce0b4a0b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8d9b0a9fce0b4a0b[] = {
  &s_a549639de263753a,
  &s_f39ea1239dd73c82,
};
static const uint16_t m_8d9b0a9fce0b4a0b[] = {1, 0};
static const uint16_t i_8d9b0a9fce0b4a0b[] = {0, 1};
const ::capnp::_::RawSchema s_8d9b0a9fce0b4a0b = {
  0x8d9b0a9fce0b4a0b, b_8d9b0a9fce0b4a0b.words, 51, d_8d9b0a9fce0b4a0b, m_8d9b0a9fce0b4a0b,
  2, 2, i_8d9b0a9fce0b4a0b, nullptr, nullptr, { &s_8d9b0a9fce0b4a0b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_86453f87c831d9e8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    232, 217,  49, 200, 135,  63,  69, 134,
     57,   0,   0,   0,   1,   0,   3,   0,
     58, 117,  99, 226, 157,  99,  73, 165,
      2,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     83,  84,  69, 118, 101, 110, 116,  84,
    114,  97,  99, 101,  67, 111, 109, 112,
    114, 101, 115, 115, 101, 100,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  83, 116, 114, 101,  97, 109,
     67, 111, 109, 112, 114, 101, 115, 115,
    101, 100,  46,  69, 118, 101, 110, 116,
     46, 109,  97, 114, 107, 101, 114,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 117, 110, 116,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_86453f87c831d9e8 = b_86453f87c831d9e8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_86453f87c831d9e8[] = {
  &s_a549639de263753a,
};
static const uint16_t m_86453f87c831d9e8[] = {0};
static const uint16_t i_86453f87c831d9e8[] = {0};
const ::capnp::_::RawSchema s_86453f87c831d9e8 = {
  0x86453f87c831d9e8, b_86453f87c831d9e8.words, 36, d_86453f87c831d9e8, m_86453f87c831d9e8,
  1, 1, i_86453f87c831d9e8, nullptr, nullptr, { &s_86453f87c831d9e8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// EventStreamCompressed
constexpr uint16_t EventStreamCompressed::_capnpPrivate::dataWordSize;
constexpr uint16_t EventStreamCompressed::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind EventStreamCompressed::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* EventStreamCompressed::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// EventStreamCompressed::Event
constexpr uint16_t EventStreamCompressed::Event::_capnpPrivate::dataWordSize;
constexpr uint16_t EventStreamCompressed::Event::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind EventStreamCompressed::Event::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* EventStreamCompressed::Event::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// EventStreamCompressed::Event::AddrRange
constexpr uint16_t EventStreamCompressed::Event::AddrRange::_capnpPrivate::dataWordSize;
constexpr uint16_t EventStreamCompressed::Event::AddrRange::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind EventStreamCompressed::Event::AddrRange::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* EventStreamCompressed::Event::AddrRange::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// EventStreamCompressed::Event::CommEdge
constexpr uint16_t EventStreamCompressed::Event::CommEdge::_capnpPrivate::dataWordSize;
constexpr uint16_t EventStreamCompressed::Event::CommEdge::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind EventStreamCompressed::Event::CommEdge::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* EventStreamCompressed::Event::CommEdge::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// EventStreamCompressed::Event::Comp
constexpr uint16_t EventStreamCompressed::Event::Comp::_capnpPrivate::dataWordSize;
constexpr uint16_t EventStreamCompressed::Event::Comp::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind EventStreamCompressed::Event::Comp::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* EventStreamCompressed::Event::Comp::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// EventStreamCompressed::Event::Comm
constexpr uint16_t EventStreamCompressed::Event::Comm::_capnpPrivate::dataWordSize;
constexpr uint16_t EventStreamCompressed::Event::Comm::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind EventStreamCompressed::Event::Comm::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* EventStreamCompressed::Event::Comm::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// EventStreamCompressed::Event::Sync
constexpr uint16_t EventStreamCompressed::Event::Sync::_capnpPrivate::dataWordSize;
constexpr uint16_t EventStreamCompressed::Event::Sync::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind EventStreamCompressed::Event::Sync::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* EventStreamCompressed::Event::Sync::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// EventStreamCompressed::Event::Marker
constexpr uint16_t EventStreamCompressed::Event::Marker::_capnpPrivate::dataWordSize;
constexpr uint16_t EventStreamCompressed::Event::Marker::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind EventStreamCompressed::Event::Marker::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* EventStreamCompressed::Event::Marker::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



